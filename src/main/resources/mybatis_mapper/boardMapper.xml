<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">        
<mapper namespace="com.acon.board.mapper.BoardMapper">
	<resultMap type="Board" id="BoardMap">
		<id column="board_no" property="board_no"/>
		<result column="title" property="title"/>
		<result column="contents" property="contents"/>
		<result column="post_time" property="post_time"/>
		<result column="prefer_good" property="good"/>
		<result column="prefer_bad" property="bad"/>
		<result column="views" property="views"/>
		<result column="replys_size" property="replys_size"/>
	
		<!-- Board : User = N : 1   User user-->
		<association property="user" javaType="User" foreignColumn="user_id">
			<id column="user_id" property="user_id"/>
			<result column="name" property="name"/>
			<result column="email" property="email"/>
			<result column="birth" property="birth"/>
		</association>
		<!-- Board : Reply =  1 : N   ArrayLust<Reply> replys -->
		<collection property="replys" javaType="java.util.ArrayList" ofType="Reply" >
			<id column="reply_no" property="reply_no"/>
			<result column="reply_title" property="title"/>
			<result column="reply_contents" property="contents"/>
			<result column="reply_post_time" property="post_time"/>
			<result column="reply_good" property="good"/>
			<result column="reply_bad" property="bad"/>
			<result column="reply_img_path" property="img_path"/>
			<association property="user" javaType="User">
				<id column="reply_user_id" property="user_id"/>
			</association>
			<collection property="good_prefers" ofType="ReplyPrefer" javaType="java.util.ArrayList">
				<id column="rp_good_reply_prefer_no"  property="reply_prefer_no"/>
				<result column="rp_good_user_id" property="user_id"/>
				<result column="rp_good_reply_no" property="reply_no"/>
				<result column="rp_good_prefer" property="prefer" />
			</collection>
			
			<collection property="bad_prefers" ofType="ReplyPrefer" javaType="java.util.ArrayList">
				<id column="rp_bad_reply_prefer_no"  property="reply_prefer_no"/>
				<result column="rp_bad_user_id" property="user_id"/>
				<result column="rp_bad_reply_no" property="reply_no"/>
				<result column="rp_bad_prefer" property="prefer" />
			</collection>
			
			
			
		</collection>
		<collection property="boardImgs" javaType="java.util.ArrayList" ofType="BoardImg">
			<id column="iboard_img_no" property="board_img_no"/>
			<result column="iimg_path" property="img_path"/>
		</collection>
	</resultMap>
	<!-- 글쓴이가 없는 보드는 없기 때문에 inner join  -->
	<!-- 리플이 없는 보드가 있기 때문에 Left join  -->
	<!--Inner join - 교집합
		left join - 왼쪽 테이블 전체 + 교집 -->
	<!-- 1:N 조인으로 페이징을 할 수 없다.  -->	
	<select id="selectPageAll"  resultType="Board">
		SELECT 
			board_no,
			title,
			post_time,
			views,
			board_no no,
			(SELECT COUNT(*) FROM REPLY r WHERE r.board_no=no) replys_size,
			(SELECT COUNT(*) FROM BOARD_PREFER WHERE board_no=no AND prefer=true) good,
			(SELECT COUNT(*) FROM BOARD_PREFER WHERE board_no=no AND prefer=false) bad,			
			user_id as 'user.user_id'
			FROM BOARD 
			ORDER BY board_no
	</select>
	<select id="selectOne" resultMap="BoardMap" parameterType="int">
		SELECT 
			b.*,
			(SELECT COUNT(*) FROM BOARD_PREFER WHERE board_no=b.board_no AND prefer=true) prefer_good,
			(SELECT COUNT(*) FROM BOARD_PREFER WHERE board_no=b.board_no AND prefer=false) prefer_bad,			
			u.user_id,u.name,u.email,u.birth,
			r.reply_no,
			r.title as reply_title,
			r.contents as reply_contents,
			r.post_time as reply_post_time,
			r.img_path as reply_img_path,
			r.good as reply_good,
			r.bad as reply_bad,
			r.user_id as reply_user_id,
			
			i.board_img_no as iboard_img_no,
			i.img_path as iimg_path,				
			
			rp_good.user_id 			as rp_good_user_id,
			rp_good.reply_prefer_no 	as rp_good_reply_prefer_no,
			rp_good.reply_no 			as rp_good_reply_no,
			rp_good.prefer 				as rp_good_prefer,
			
			rp_bad.user_id 				as rp_bad_user_id,
			rp_bad.reply_prefer_no 		as rp_bad_reply_prefer_no,
			rp_bad.reply_no 			as rp_bad_reply_no,
			rp_bad.prefer 				as rp_bad_prefer
			
			
			FROM BOARD b INNER JOIN USER u
			USING (user_id)		
						
			LEFT JOIN BOARD_IMG i
			USING (board_no)
			
			LEFT JOIN REPLY r
			USING (board_no)
			
			LEFT JOIN (SELECT * FROM REPLY_PREFER WHERE prefer=true) rp_good
			ON r.reply_no=rp_good.reply_no
			
			LEFT JOIN (SELECT * FROM REPLY_PREFER WHERE prefer=false) rp_bad
			ON r.reply_no=rp_bad.reply_no
			
			
			WHERE b.board_no=#{boardNo}
			ORDER BY reply_no DESC
	</select>
	<!-- <update id="updateGood">
		UPDATE BOARD SET 
			good=(SELECT * from(select good+1 FROM BOARD b WHERE board_no=1) as b)+1
			WHERE board_no=#{boardNo}
	</update> -->
	<update id="updateGood" parameterType="int">
		UPDATE BOARD SET 
			good=good+1
			WHERE board_no=#{boardNo}
	</update>
	<update id="updateBad" parameterType="int">
		UPDATE BOARD  SET 
			bad=bad+1
			WHERE board_no=#{boardNo}
	</update>
	<update id="updateViews" parameterType="int">
		UPDATE BOARD SET
			views=views+1
			WHERE board_no=#{boardNo}
	</update>
	<update id="updateOne" parameterType="Board">
		UPDATE BOARD SET
			title=#{title},
			contents=#{contents}
			WHERE board_no=#{board_no}
	</update>
	<!-- auto increment 로 생성된 board_no 을 반환 받는 방법
	useGeneratedKeys : auto increment로 pk를 생성한다.
	keyProperty : auto increment로 pk를 해당 필들에 정의함
	-->
	<insert id="insertOne" parameterType="Board"
	 useGeneratedKeys="true" keyProperty="board_no">
		INSERT INTO BOARD (title,contents,user_id)
		VALUES (#{title},#{contents},#{user.user_id})
	</insert>
	<delete id="deleteOne" parameterType="int">
		DELETE FROM BOARD WHERE board_no=#{boardNo}	
	</delete>
</mapper>




